FUNCTION ZHCM_FM_0053.
*"----------------------------------------------------------------------
*"*"Локальный интерфейс:
*"  IMPORTING
*"     VALUE(BEGDA) TYPE  CHAR8
*"     VALUE(ENDDA) TYPE  CHAR8
*"     VALUE(PERNR) TYPE  CHAR8
*"     VALUE(MASSN) TYPE  MASSN OPTIONAL
*"     VALUE(MASSG) TYPE  MASSG OPTIONAL
*"     VALUE(MOD) TYPE  CHAR1
*"     VALUE(DATE) TYPE  CHAR8 OPTIONAL
*"     VALUE(SUBTY) TYPE  CHAR4 OPTIONAL
*"     VALUE(MODE) TYPE  CHAR1 DEFAULT 'N'
*"     VALUE(PLANS) TYPE  PLANS OPTIONAL
*"     VALUE(PERSG) TYPE  PERSG OPTIONAL
*"     VALUE(DOGONAYME) TYPE  CHAR2 OPTIONAL
*"     VALUE(SCHKZ) TYPE  CHAR8 OPTIONAL
*"     VALUE(ANZHL) TYPE  ANZHL OPTIONAL
*"     VALUE(ZEINH) TYPE  CHAR3 OPTIONAL
*"     VALUE(VIDDOG) TYPE  CHAR1 OPTIONAL
*"     VALUE(OKLAD) TYPE  PAD_AMT7S OPTIONAL
*"     VALUE(PERSO) TYPE  PAD_AMT7S OPTIONAL
*"     VALUE(TEXT1) TYPE  CHAR72 OPTIONAL
*"     VALUE(TEXT2) TYPE  CHAR72 OPTIONAL
*"     VALUE(TEXT3) TYPE  CHAR72 OPTIONAL
*"     VALUE(FISTL) TYPE  FISTL OPTIONAL
*"     VALUE(GEBER) TYPE  CHAR10 OPTIONAL
*"     VALUE(ORGEH1) TYPE  ORGEH OPTIONAL
*"     VALUE(ORGEH2) TYPE  ORGEH OPTIONAL
*"     VALUE(PERSK) TYPE  PERSK OPTIONAL
*"     VALUE(OPYT) TYPE  CHAR1 OPTIONAL
*"     VALUE(OBRAZ) TYPE  CHAR1 OPTIONAL
*"     VALUE(I_WERKS) TYPE  WERKS_D OPTIONAL
*"  EXPORTING
*"     VALUE(DONE) TYPE  CHAR1
*"  TABLES
*"      MESSTAB STRUCTURE  BDCMSGCOLL OPTIONAL
*"      BDCDAT STRUCTURE  BDCMSGCOLL OPTIONAL
*"      MESSTAB1 STRUCTURE  BDCMSGCOLL OPTIONAL
*"      MESSTAB2 STRUCTURE  BDCMSGCOLL OPTIONAL
*"      T_RETURN STRUCTURE  BAPIRET2 OPTIONAL
*"  EXCEPTIONS
*"      COLLISION
*"----------------------------------------------------------------------
  DATA : LS_P2001  TYPE P2001,
         LS_RETURN TYPE BAPIRETURN1,
         LT_ERRORS LIKE RPBENERR OCCURS 10 WITH HEADER LINE,
         NUMBER(8) TYPE N,
         BEGINDATE TYPE DATS,
         ENDDATE   TYPE DATS.
  DATA ZOBJID LIKE HRP1001-OBJID.
  DATA LV_ERGRU TYPE CHAR2.
  DATA LV_SPEBE TYPE CHAR1.
  DATA LV_KOSTL TYPE KOSTL.
  DATA LV_GEBER TYPE CHAR10.
  DATA Z_HILFM TYPE HRP1010-HILFM.
  DATA: FVAL TYPE BDCDATA-FVAL.
  DATA Z_PA1001 TYPE HRP1001.
  DATA Z_PA1001_2 TYPE HRP1001.
  DATA Z_PA1014 TYPE HRP1014.
  DATA Z_PA0016 LIKE PA0016 OCCURS 0 WITH HEADER LINE.
  DATA IT_PA1001 LIKE HRP1001 OCCURS 0 WITH HEADER LINE.
  DATA: INF_0001 LIKE PA0001.
  DATA: INF_0298 LIKE PA0298.
  DATA: INF2006 LIKE PA2006.
  DATA: NUM2 TYPE NUMC1.
  DATA: FNAM TYPE BDC_FVAL.

  FIELD-SYMBOLS: <MESSTAB> TYPE BDCMSGCOLL.
  DATA: MSG_TXT   TYPE SY-LISEL, S_BAPIRET TYPE BAPIRET2.
* Reaction
  CONSTANTS: ERROR_MSG   TYPE SY-MSGTY VALUE 'E',
             WARNING_MSG TYPE SY-MSGTY VALUE 'W',
             INFO_MSG    TYPE SY-MSGTY VALUE 'I',
             SUCCESS_MSG TYPE SY-MSGTY VALUE 'S',
             ABORT_MSG   TYPE SY-MSGTY VALUE 'A',
             NO_MSG      TYPE SY-MSGTY VALUE 'N',
             NO_LOG      TYPE SY-MSGTY VALUE 'L'.

  MOVE PERNR TO NUMBER.
  MOVE BEGDA TO BEGINDATE.
  MOVE ENDDA TO ENDDATE.
  DATA Z_DATUM TYPE CHAR8.
  DATA V_ORDDT TYPE SCAL-DATE.
  DATA IT_HOLIDAYS TYPE STANDARD TABLE OF ISCAL_DAY.
  DATA IS_HOLIDAYS TYPE ISCAL_DAY.
  DATA H_CALENDAR TYPE SCAL-HCALID.
  DATA F_CALENDAR TYPE SCAL-FCALID.
  DATA V_FREEDAY TYPE CIND.

  V_ORDDT = SY-DATUM.
  H_CALENDAR = 'KZ'.
  F_CALENDAR = 'KZ'.
  CLEAR V_FREEDAY.

  IF MASSN = 'T1' OR MASSN = 'TD' OR MASSN = 'T9' OR MASSN = 'T7' OR MASSN = 'TA'.

    DO.
      CALL FUNCTION 'HOLIDAY_GET'
        EXPORTING
          HOLIDAY_CALENDAR = H_CALENDAR
          FACTORY_CALENDAR = F_CALENDAR
          DATE_FROM        = V_ORDDT
          DATE_TO          = V_ORDDT
        TABLES
          HOLIDAYS         = IT_HOLIDAYS.

      LOOP AT IT_HOLIDAYS INTO IS_HOLIDAYS.
        V_FREEDAY = IS_HOLIDAYS-FREEDAY.
      ENDLOOP.

      IF V_FREEDAY IS INITIAL.
        EXIT.
      ELSE.
        V_ORDDT = V_ORDDT + 1.
      ENDIF.
      REFRESH IT_HOLIDAYS.
      CLEAR IS_HOLIDAYS.
      CLEAR V_FREEDAY.
    ENDDO.

    CONCATENATE V_ORDDT+6(2) V_ORDDT+4(2) V_ORDDT+0(4) INTO Z_DATUM.

  ELSE.
    CONCATENATE SY-DATUM+6(2) SY-DATUM+4(2) SY-DATUM+0(4) INTO Z_DATUM.

  ENDIF.

  IF PLANS IS NOT INITIAL.
    SELECT SINGLE HILFM  FROM HRP1010 INTO Z_HILFM
                            WHERE OBJID = PLANS
                            AND   OTYPE = 'S'
                            AND   PLVAR = '01'
                            AND   SUBTY = '0050'
                            AND   ENDDA >= SY-DATUM
                            AND   BEGDA <= '99991231'.
  ENDIF.

  "@IK Инцидент № 3,104,214
  "При массовом вызове FM BDC DATA не очищается
  PERFORM REFRESH_BDCDATA.

  IF MOD = '1'.
    DATA Z_PLANS TYPE CHAR8.
    DATA Z_BEGDA TYPE SY-DATUM.

    CONCATENATE BEGDA+4(4) BEGDA+2(2) BEGDA+0(2) INTO Z_BEGDA.

    IF MASSN = 'T1'.
      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-PERNR'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-EINDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'T529T-MNTXT(03)'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=PICK'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-SELEC(03)' 'X'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-MASSG'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.

*   Определяем должность, раздел персонала,  по табельному номеру
      SELECT SINGLE * FROM PA0001 INTO INF_0001 WHERE PERNR = PERNR
          AND   BEGDA <= Z_BEGDA
          AND   ENDDA >= Z_BEGDA.
*
      Z_PLANS = INF_0001-PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-PLANS' Z_PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-WERKS' INF_0001-WERKS.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSG' INF_0001-PERSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSK' INF_0001-PERSK.

      PERFORM BDC_DYNPRO      USING 'MP200000' '2001'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.

*        PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
*        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-MASSS'.
*        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*        PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*        PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
*        PERFORM BDC_FIELD       USING 'P0298-ORDDT' BEGDA.
*        PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.
*
      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=AUTO'.
*{   DELETE         DHRK927613                                        7
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' MASSG.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*{   DELETE         DHRK927613                                        6
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' MASSG.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.
*{   INSERT         DHRK927595                                        5

*}   INSERT

      IF INF_0001-WERKS = '0101'.
        ZOBJID = '50000807'.
      ELSEIF   INF_0001-WERKS = '0111'.
        ZOBJID = '50034791'.
      ELSEIF   INF_0001-WERKS = '0112'.
        ZOBJID = '50005419'.
      ELSEIF   INF_0001-WERKS = '0113'.
        ZOBJID = '50034789'.
      ELSEIF   INF_0001-WERKS = '0114'.
        ZOBJID = '50009548'.
      ELSEIF   INF_0001-WERKS = '0115'.
        ZOBJID = '50006276'.
      ELSEIF   INF_0001-WERKS = '0116'.
        ZOBJID = '50011037'.
      ELSEIF   INF_0001-WERKS = '0117'.
        ZOBJID = '50008145'.
      ELSEIF   INF_0001-WERKS = '0118'.
        ZOBJID = '50012006'.
      ELSEIF   INF_0001-WERKS = '0119'.
        ZOBJID = '50013483'.
      ELSEIF   INF_0001-WERKS = '0120'.
        ZOBJID = '50013882'.
      ELSEIF   INF_0001-WERKS = '0122'.
        ZOBJID = '50011682'.
      ELSEIF   INF_0001-WERKS = '0123'.
        ZOBJID = '50012691'.
      ELSEIF   INF_0001-WERKS = '0124'.
        ZOBJID = '50015056'.
      ELSEIF   INF_0001-WERKS = '0125'.
        ZOBJID = '50014911'.
      ELSEIF   INF_0001-WERKS = '0126'.
        ZOBJID = '50015050'.
      ELSEIF   INF_0001-WERKS = '0129'.
        ZOBJID = '50010031'.
      ELSEIF   INF_0001-WERKS = '0131'.
        ZOBJID = '50005799'.
      ELSEIF   INF_0001-WERKS = '0132'.
        ZOBJID = '50008906'.
      ELSEIF   INF_0001-WERKS = '0133'.
        ZOBJID = '50002294'.
      ELSEIF   INF_0001-WERKS = '0134'.
        ZOBJID = '50002294'.
      ELSEIF   INF_0001-WERKS = '0135'.
        ZOBJID = '50042580'.
      ELSEIF   INF_0001-WERKS = '0136'.
        ZOBJID = '50042727'.
      ELSEIF   INF_0001-WERKS = '0137'.
        ZOBJID = '50042782'.
      ENDIF.

      SELECT SINGLE * FROM HRP1001
                        WHERE OBJID = ZOBJID
                        AND   OTYPE = 'S'
                        AND   PLVAR = '01'
                        AND   RSIGN = 'A'
                        AND   RELAT = '008'
                        AND   SCLAS = 'P'
                        AND   ENDDA >= Z_BEGDA
                        AND   BEGDA <= Z_BEGDA.

      PERFORM BDC_FIELD       USING 'P0298-ZZPERNR1' HRP1001-SOBID.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
*{   INSERT         DHRK927591                                        4

*}   INSERT
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/EBCK'.

      REFRESH MESSTAB.
      CALL TRANSACTION 'PA40' USING BDCDATA
                       MODE   MODE
                       UPDATE 'L'
                       MESSAGES INTO MESSTAB.

      IF SY-SUBRC = 0.
        DONE = 'X'.
      ELSE.
        LOOP AT MESSTAB WHERE MSGTYP = 'E'.
        ENDLOOP.
      ENDIF.

    ELSEIF MASSN = 'TD'.
      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-PERNR'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-EINDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'T529T-MNTXT(08)'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=PICK'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-SELEC(08)' 'X'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-MASSG'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.

*   Определяем должность, раздел персонала,  по табельному номеру
      SELECT SINGLE * FROM PA0001 INTO INF_0001 WHERE PERNR = PERNR
          AND   BEGDA <= Z_BEGDA
          AND   ENDDA >= Z_BEGDA.
*
      Z_PLANS = INF_0001-PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-PLANS' Z_PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-WERKS' INF_0001-WERKS.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSG' INF_0001-PERSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSK' INF_0001-PERSK.

      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PLANS' Z_PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-WERKS' INF_0001-WERKS.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSG' INF_0001-PERSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSK' INF_0001-PERSK.

      PERFORM BDC_DYNPRO      USING 'MP200000' '2001'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.

      PERFORM BDC_DYNPRO      USING 'MP200000' '2001'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-MASSS'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*{   DELETE         DHRK927631                                        8
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=AUTO'.
*{   DELETE         DHRK927631                                        9
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*{   DELETE         DHRK927631                                       10
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      IF INF_0001-WERKS = '0101'.
        ZOBJID = '50000807'.
      ELSEIF   INF_0001-WERKS = '0111'.
        ZOBJID = '50034791'.
      ELSEIF   INF_0001-WERKS = '0112'.
        ZOBJID = '50005419'.
      ELSEIF   INF_0001-WERKS = '0113'.
        ZOBJID = '50034789'.
      ELSEIF   INF_0001-WERKS = '0114'.
        ZOBJID = '50009548'.
      ELSEIF   INF_0001-WERKS = '0115'.
        ZOBJID = '50006276'.
      ELSEIF   INF_0001-WERKS = '0116'.
        ZOBJID = '50011037'.
      ELSEIF   INF_0001-WERKS = '0117'.
        ZOBJID = '50008145'.
      ELSEIF   INF_0001-WERKS = '0118'.
        ZOBJID = '50012006'.
      ELSEIF   INF_0001-WERKS = '0119'.
        ZOBJID = '50013483'.
      ELSEIF   INF_0001-WERKS = '0120'.
        ZOBJID = '50013882'.
      ELSEIF   INF_0001-WERKS = '0122'.
        ZOBJID = '50011682'.
      ELSEIF   INF_0001-WERKS = '0123'.
        ZOBJID = '50012691'.
      ELSEIF   INF_0001-WERKS = '0124'.
        ZOBJID = '50015056'.
      ELSEIF   INF_0001-WERKS = '0125'.
        ZOBJID = '50014911'.
      ELSEIF   INF_0001-WERKS = '0126'.
        ZOBJID = '50015050'.
      ELSEIF   INF_0001-WERKS = '0129'.
        ZOBJID = '50010031'.
      ELSEIF   INF_0001-WERKS = '0131'.
        ZOBJID = '50005799'.
      ELSEIF   INF_0001-WERKS = '0132'.
        ZOBJID = '50008906'.
      ELSEIF   INF_0001-WERKS = '0133'.
        ZOBJID = '50002294'.
      ELSEIF   INF_0001-WERKS = '0134'.
        ZOBJID = '50002294'.
      ELSEIF   INF_0001-WERKS = '0135'.
        ZOBJID = '50042580'.
      ELSEIF   INF_0001-WERKS = '0136'.
        ZOBJID = '50042727'.
      ELSEIF   INF_0001-WERKS = '0137'.
        ZOBJID = '50042782'.
      ENDIF.

      SELECT * FROM HRP1001
                        WHERE OBJID = ZOBJID
                        AND   OTYPE = 'S'
                        AND   PLVAR = '01'
                        AND   RSIGN = 'A'
                        AND   RELAT = '008'
                        AND   SCLAS = 'P'
                        AND   ENDDA >= Z_BEGDA
                        AND   BEGDA <= Z_BEGDA.
      ENDSELECT.
      PERFORM BDC_FIELD       USING 'P0298-ZZPERNR1' HRP1001-SOBID.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/EBCK'.

      REFRESH MESSTAB.
      CALL TRANSACTION 'PA40' USING BDCDATA
                       MODE   MODE
                       UPDATE 'L'
                       MESSAGES INTO MESSTAB.

      IF SY-SUBRC = 0.
        DONE = 'X'.
      ELSE.
        LOOP AT MESSTAB WHERE MSGTYP = 'E'.
        ENDLOOP.
      ENDIF.

    ELSEIF MASSN = 'T7'.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-PERNR'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-EINDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'T529T-MNTXT(03)'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=PICK'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-SELEC(03)' 'X'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-MASSG'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.

* Определяем должность, раздел персонала,  по табельному номеру
      SELECT SINGLE * FROM PA0001 INTO INF_0001 WHERE PERNR = PERNR
          AND   BEGDA <= Z_BEGDA
          AND   ENDDA >= Z_BEGDA.
*
      Z_PLANS = INF_0001-PLANS.

      PERFORM BDC_FIELD       USING 'PSPAR-PLANS' Z_PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-WERKS' INF_0001-WERKS.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSG' INF_0001-PERSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSK' INF_0001-PERSK.

*      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
*      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.
*      PERFORM BDC_FIELD       USING 'PSPAR-PLANS' Z_PLANS.
*      PERFORM BDC_FIELD       USING 'PSPAR-WERKS' PA0001-WERKS.
*      PERFORM BDC_FIELD       USING 'PSPAR-PERSG' PA0001-PERSG.
*      PERFORM BDC_FIELD       USING 'PSPAR-PERSK' PA0001-PERSK.

*      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P0000-ENDDA' ENDDA.

*      PERFORM BDC_DYNPRO      USING 'MP200000' '2001'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-ENDDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.
*
*      PERFORM BDC_DYNPRO      USING 'MP200000' '2001'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.

*      PERFORM BDC_DYNPRO      USING 'MP200000' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.
**      PERFORM BDC_FIELD       USING 'P2001-STDAZ' STDAZ.
*
*      PERFORM BDC_DYNPRO      USING 'MP200000' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.
*
*      PERFORM BDC_DYNPRO      USING 'MP200000' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.

      PERFORM BDC_DYNPRO      USING 'MP200000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.
*       PERFORM BDC_FIELD       USING 'P2001-STDAZ' STDAZ.

*       PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
*       PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-MASSS'.
*       PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*       PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*       PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
*       PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
*       PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=AUTO'.
*{   DELETE         DHRK927631                                       11
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

*       PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
*       PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
*       PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*       PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*       PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
*       PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
*       PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*{   DELETE         DHRK927631                                       12
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

*       IF PA0001-WERKS = '0101'.
*         ZOBJID = '50000807'.
*       ELSEIF   PA0001-WERKS = '0111'.
*         ZOBJID = '50034791'.
*       ELSEIF   PA0001-WERKS = '0112'.
*         ZOBJID = '50005419'.
*       ELSEIF   PA0001-WERKS = '0113'.
*         ZOBJID = '50034789'.
*       ELSEIF   PA0001-WERKS = '0114'.
*         ZOBJID = '50009548'.
*       ELSEIF   PA0001-WERKS = '0115'.
*         ZOBJID = '50006276'.
*       ELSEIF   PA0001-WERKS = '0116'.
*         ZOBJID = '50011037'.
*       ELSEIF   PA0001-WERKS = '0117'.
*         ZOBJID = '50008145'.
*       ELSEIF   PA0001-WERKS = '0118'.
*         ZOBJID = '50012006'.
*       ELSEIF   PA0001-WERKS = '0119'.
*         ZOBJID = '50013483'.
*       ELSEIF   PA0001-WERKS = '0120'.
*         ZOBJID = '50013882'.
*       ELSEIF   PA0001-WERKS = '0122'.
*         ZOBJID = '50011682'.
*       ELSEIF   PA0001-WERKS = '0123'.
*         ZOBJID = '50012691'.
*       ELSEIF   PA0001-WERKS = '0124'.
*         ZOBJID = '50015056'.
*       ELSEIF   PA0001-WERKS = '0125'.
*         ZOBJID = '50014911'.
*       ELSEIF   PA0001-WERKS = '0126'.
*         ZOBJID = '50015050'.
*       ELSEIF   PA0001-WERKS = '0129'.
*         ZOBJID = '50010031'.
*       ELSEIF   PA0001-WERKS = '0131'.
*         ZOBJID = '50005799'.
*       ELSEIF   PA0001-WERKS = '0132'.
*         ZOBJID = '50008906'.
*       ELSEIF   PA0001-WERKS = '0133'.
*         ZOBJID = '50002294'.
*       ELSEIF   PA0001-WERKS = '0135'.
*         ZOBJID = '50042580'.
*       ELSEIF   PA0001-WERKS = '0136'.
*         ZOBJID = '50042727'.
*       ELSEIF   PA0001-WERKS = '0137'.
*         ZOBJID = '50042782'.
*       ENDIF.
*
*       SELECT * FROM HRP1001
*                         WHERE OBJID = ZOBJID
*                         AND   OTYPE = 'S'
*                         AND   PLVAR = '01'
*                         AND   RSIGN = 'A'
*                         AND   RELAT = '008'
*                         AND   SCLAS = 'P'
*                         AND   ENDDA >= Z_BEGDA
*                         AND   BEGDA <= Z_BEGDA.
*       ENDSELECT.
*       PERFORM BDC_FIELD       USING 'P0298-ZZPERNR1' HRP1001-SOBID.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/EBCK'.

      REFRESH MESSTAB.
      CALL TRANSACTION 'PA40' USING BDCDATA
                       MODE   MODE
                       UPDATE 'L'
                       MESSAGES INTO MESSTAB.

      IF SY-SUBRC = 0.
        DONE = 'X'.
      ELSE.
        LOOP AT MESSTAB WHERE MSGTYP = 'E'.
        ENDLOOP.
      ENDIF.

    ELSEIF MASSN = 'T9'.       " Добавлено 16.10.2012 Асель К. 00018688 "Отпуск по беременности и родам"

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-PERNR'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-EINDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=PICK'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA'  BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-SELEC(09)' 'X'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      SELECT SINGLE * FROM PA0001 INTO INF_0001 WHERE PERNR = PERNR
          AND   BEGDA <= Z_BEGDA
          AND   ENDDA >= Z_BEGDA.

      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-MASSG'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' 'UPD'.
      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PLANS' INF_0001-PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-WERKS' INF_0001-WERKS.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSG' INF_0001-PERSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSK' INF_0001-PERSK.

      PERFORM BDC_DYNPRO      USING 'MP200000' '2008'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' 'UPD'.
      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.

      PERFORM BDC_DYNPRO      USING 'MP000100' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' 'UPD'.
      PERFORM BDC_FIELD       USING 'P0001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0001-ENDDA' '31129999'.
*          PERFORM BDC_FIELD       USING 'P0001-BTRTL' 'N000'.
      PERFORM BDC_FIELD       USING 'P0001-KOSTL' INF_0001-KOSTL.
      PERFORM BDC_FIELD       USING 'P0001-GSBER' INF_0001-GSBER.
      PERFORM BDC_FIELD       USING 'P0001-FISTL' INF_0001-FISTL.
      PERFORM BDC_FIELD       USING 'P0001-GEBER' INF_0001-GEBER.
      PERFORM BDC_FIELD       USING 'P0001-ABKRS' INF_0001-ABKRS.
      PERFORM BDC_FIELD       USING 'P0001-ANSVH' INF_0001-ANSVH.
      PERFORM BDC_FIELD       USING 'P0001-PLANS' INF_0001-PLANS.
*          PERFORM BDC_FIELD       USING 'P0001-STELL' '50000715'.
*          PERFORM BDC_FIELD       USING 'P0001-ORGEH' '50112634'.
*          PERFORM BDC_FIELD       USING 'P0001-VDSK1' '01013000630000'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-MASSS'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*{   DELETE         DHRK927631                                       13
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
*      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=AUTO'.
*{   DELETE         DHRK927631                                       11
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
*      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*{   DELETE         DHRK927631                                       12
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
*      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/EBCK'.


      REFRESH MESSTAB.
      CALL TRANSACTION 'PA40' USING BDCDATA MODE MODE UPDATE 'L' MESSAGES INTO MESSTAB.

      IF SY-SUBRC = 0.
        DONE = 'X'.
      ELSE.
*        LOOP AT MESSTAB WHERE MSGTYP = 'E'.
*        ENDLOOP.
        LOOP AT MESSTAB ASSIGNING <MESSTAB>.
          CLEAR: S_BAPIRET.

          S_BAPIRET-TYPE = <MESSTAB>-MSGTYP.
          S_BAPIRET-ID = <MESSTAB>-MSGID.
          S_BAPIRET-NUMBER = <MESSTAB>-MSGNR.
          S_BAPIRET-MESSAGE_V1 = <MESSTAB>-MSGV1.
          S_BAPIRET-MESSAGE_V2 = <MESSTAB>-MSGV2.
          S_BAPIRET-MESSAGE_V3 = <MESSTAB>-MSGV3.
          S_BAPIRET-MESSAGE_V4 = <MESSTAB>-MSGV4.

          CALL FUNCTION 'RPY_MESSAGE_COMPOSE'
            EXPORTING
*             LANGUAGE          = SY-LANGU
              MESSAGE_ID        = S_BAPIRET-ID
              MESSAGE_NUMBER    = S_BAPIRET-NUMBER
              MESSAGE_VAR1      = S_BAPIRET-MESSAGE_V1
              MESSAGE_VAR2      = S_BAPIRET-MESSAGE_V2
              MESSAGE_VAR3      = S_BAPIRET-MESSAGE_V3
              MESSAGE_VAR4      = S_BAPIRET-MESSAGE_V4
            IMPORTING
              MESSAGE_TEXT      = MSG_TXT
*         TABLES
*             LONGTEXT          =
            EXCEPTIONS
              MESSAGE_NOT_FOUND = 1
              OTHERS            = 2.
          IF SY-SUBRC <> 0.
*         MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ELSE.
            IF MSG_TXT IS NOT INITIAL.
              S_BAPIRET-MESSAGE = MSG_TXT.
            ENDIF.
          ENDIF.

          APPEND S_BAPIRET TO T_RETURN.

        ENDLOOP.
      ENDIF.
*--------------------------------------------------------------------*
    ELSEIF MASSN = 'TA'.   "Отпуск по уходу за ребёнком до исполнения 3 лет"
      "-------------------------------------------------------------------------------------
      " Added by Noir N 27.11.2013
      " delete limits of absence which begin after the BEGDA
      DELETE FROM PA2006 WHERE  PERNR = PERNR AND BEGDA  > Z_BEGDA.

      COMMIT WORK AND WAIT.

      "-------------------------------------------------------------------------------------

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-EINDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'RP50G-PERNR'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR'  PERNR.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'T529T-MNTXT(10)'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=PICK'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-SELEC(10)' 'X'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-MASSG'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' 'UPD'.
      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.
*       PERFORM BDC_FIELD       USING 'PSPAR-PLANS' '50133364'.
*       PERFORM BDC_FIELD       USING 'PSPAR-WERKS' '0101'.
*       PERFORM BDC_FIELD       USING 'PSPAR-PERSG' '1'.
*       PERFORM BDC_FIELD       USING 'PSPAR-PERSK' '43'.

      PERFORM BDC_DYNPRO      USING 'MP200000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-ENDDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.

*      PERFORM BDC_DYNPRO      USING 'MP200000' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-ENDDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P2001-BEGDA' '20.02.2013'.
*      PERFORM BDC_FIELD       USING 'P2001-ENDDA' '19.02.2014'.

      PERFORM BDC_DYNPRO      USING 'MP200000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.
*      PERFORM BDC_FIELD       USING 'P2001-STDAZ' ' 1968,00'.

      PERFORM BDC_DYNPRO      USING 'MP200000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P2001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P2001-ENDDA' ENDDA.
*      PERFORM BDC_FIELD       USING 'P2001-STDAZ' ' 1968,00'.

      PERFORM BDC_DYNPRO      USING 'MP000100' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' 'UPD'.
      PERFORM BDC_FIELD       USING 'P0001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0001-ENDDA' '31.12.9999'.
*      PERFORM BDC_FIELD       USING 'P0001-BTRTL' 'N000'.
*      PERFORM BDC_FIELD       USING 'P0001-KOSTL' '3000613000'.
*      PERFORM BDC_FIELD       USING 'P0001-GSBER' '01'.
*      PERFORM BDC_FIELD       USING 'P0001-FISTL' '3000613000'.
*      PERFORM BDC_FIELD       USING 'P0001-GEBER' '01'.
*      PERFORM BDC_FIELD       USING 'P0001-ABKRS' '01'.
*      PERFORM BDC_FIELD       USING 'P0001-ANSVH' '01'.
*      PERFORM BDC_FIELD       USING 'P0001-PLANS' '50133364'.
*      PERFORM BDC_FIELD       USING 'P0001-STELL' '50000704'.
*      PERFORM BDC_FIELD       USING 'P0001-ORGEH' '50046170'.
*      PERFORM BDC_FIELD       USING 'P0001-VDSK1' '0101'.

* Добавлено 13.06.2013 00018688 Асель К.
* Если у сотрудника нет лимита за текущий год
      DATA: KONC_GODA TYPE D.

      CONCATENATE  BEGDA+4 '1231' INTO KONC_GODA.

      SELECT SINGLE * FROM PA2006 INTO INF2006
        WHERE PERNR = PERNR AND
              ENDDA = KONC_GODA.

      IF SY-SUBRC = 0.
        PERFORM BDC_DYNPRO      USING 'MP200000' '3250'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P2006-BEGDA(01)'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=DLIM'.
        PERFORM BDC_FIELD       USING 'RP50M-BEGDA' BEGDA.
        PERFORM BDC_FIELD       USING 'RP50M-ENDDA' '31.12.9999'."endda.
        PERFORM BDC_FIELD       USING 'RP50M-SUBTY' '20'.
        PERFORM BDC_FIELD       USING 'RP50M-ABGRD' BEGDA.
*      PERFORM BDC_FIELD       USING 'RP50M-DEEND' '31.12.9999'.
        PERFORM BDC_FIELD       USING 'RP50M-SELE2(01)' 'X'.
      ENDIF.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-MASSS'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*{   DELETE         DHRK927631                                       13
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
*      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=AUTO'.
*{   DELETE         DHRK927631                                       14
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
*      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

*      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P0298-BEGDA' begda.
**      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
**      PERFORM BDC_FIELD       USING 'P0298-ORDNU' '1281'.
*      PERFORM BDC_FIELD       USING 'P0298-ORDDT' begda.
**      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-ZZPERNR3'.
**      PERFORM BDC_FIELD       USING 'P0298-ZZPERNR3' '00001040'.
**      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*{   DELETE         DHRK927631                                       15
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
*      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
*      PERFORM BDC_FIELD       USING 'P0298-ORDNU' '1281'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
*      PERFORM BDC_FIELD       USING 'P0298-ZZPERNR3' '1040'.
      PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/EBCK'.


      SELECT SINGLE * FROM PA0298 INTO INF_0298 WHERE PERNR = PERNR
          AND MASSN = MASSN
          AND MASSG = MASSG
          AND BEGDA <= Z_BEGDA
          AND ENDDA >= Z_BEGDA.

      REFRESH MESSTAB.
      CALL TRANSACTION 'PA40' USING BDCDATA MODE MODE UPDATE 'L' MESSAGES INTO MESSTAB.

      IF SY-SUBRC = 0.
*{   REPLACE        DHRK927477                                        1
*\        DONE = 'X'.

*}   REPLACE
      ELSE.
*        LOOP AT MESSTAB WHERE MSGTYP = 'E'.
*        ENDLOOP.
        LOOP AT MESSTAB ASSIGNING <MESSTAB>.
          CLEAR: S_BAPIRET.

          S_BAPIRET-TYPE = <MESSTAB>-MSGTYP.
          S_BAPIRET-ID = <MESSTAB>-MSGID.
          S_BAPIRET-NUMBER = <MESSTAB>-MSGNR.
          S_BAPIRET-MESSAGE_V1 = <MESSTAB>-MSGV1.
          S_BAPIRET-MESSAGE_V2 = <MESSTAB>-MSGV2.
          S_BAPIRET-MESSAGE_V3 = <MESSTAB>-MSGV3.
          S_BAPIRET-MESSAGE_V4 = <MESSTAB>-MSGV4.

          CALL FUNCTION 'RPY_MESSAGE_COMPOSE'
            EXPORTING
*             LANGUAGE          = SY-LANGU
              MESSAGE_ID        = S_BAPIRET-ID
              MESSAGE_NUMBER    = S_BAPIRET-NUMBER
              MESSAGE_VAR1      = S_BAPIRET-MESSAGE_V1
              MESSAGE_VAR2      = S_BAPIRET-MESSAGE_V2
              MESSAGE_VAR3      = S_BAPIRET-MESSAGE_V3
              MESSAGE_VAR4      = S_BAPIRET-MESSAGE_V4
            IMPORTING
              MESSAGE_TEXT      = MSG_TXT
*         TABLES
*             LONGTEXT          =
            EXCEPTIONS
              MESSAGE_NOT_FOUND = 1
              OTHERS            = 2.
          IF SY-SUBRC <> 0.
*         MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ELSE.
            IF MSG_TXT IS NOT INITIAL.
              S_BAPIRET-MESSAGE = MSG_TXT.
            ENDIF.
          ENDIF.

          APPEND S_BAPIRET TO T_RETURN.

        ENDLOOP.
*{   INSERT         DHRK927477                                        2
*
*}   INSERT
      ENDIF.
*{   INSERT         DHRK927477                                        3
      READ TABLE T_RETURN WITH KEY TYPE = 'E'.
      IF SY-SUBRC <> 0.
        DONE = 'X'.
      ENDIF.
*}   INSERT
*-------------------------------------------------
* Добавлено 22.07.2013 ( для % ставки ) при отпуске по уходу за ребенком, % ставка 100,
* нужно чтобы было 0

      CLEAR BDCDATA.
      REFRESH BDCDATA.

      CONCATENATE BEGDA+4(4) BEGDA+2(2) BEGDA+0(2) INTO Z_BEGDA.

      SELECT SINGLE * FROM PA0001 INTO INF_0001 WHERE PERNR = PERNR
            AND   BEGDA <= Z_BEGDA
            AND   ENDDA >= Z_BEGDA.

      PERFORM BDC_DYNPRO      USING 'SAPMH5A0' '5000'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'PPHDR-PLVAR' '01'.
      PERFORM BDC_FIELD       USING 'PPHDR-OTYPE' 'S'.
      PERFORM BDC_FIELD       USING 'PM0D1-SEARK' INF_0001-PLANS.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'TT_T777T-ITEXT(02)'.
      PERFORM BDC_FIELD       USING 'PM0D1-TIMR6' 'X'.
      PERFORM BDC_FIELD       USING 'PPHDR-BEGDA' '01.01.1800'.
      PERFORM BDC_FIELD       USING 'PPHDR-ENDDA' '31.12.9999'.
      PERFORM BDC_FIELD       USING 'MARKFELD(02)' 'X'.

*        PERFORM BDC_DYNPRO      USING 'SAPMH5A0' '5000'.
*        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*        PERFORM BDC_FIELD       USING 'PPHDR-PLVAR' '01'.
*        PERFORM BDC_FIELD       USING 'PPHDR-OTYPE' 'S'.
*        PERFORM BDC_FIELD       USING 'PM0D1-SEARK' INF_0001-PLANS.
*        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'PM0D1-TIMRD'.
*        PERFORM BDC_FIELD       USING 'PM0D1-TIMR6' ''.
*        PERFORM BDC_FIELD       USING 'PPHDR-BEGDA' '01.01.1800'.
*        PERFORM BDC_FIELD       USING 'PPHDR-ENDDA' '31.12.9999'.
*        PERFORM BDC_FIELD       USING 'PM0D1-TIMRD' 'X'.

*        PERFORM BDC_DYNPRO      USING 'SAPMH5A0' '5000'.
*        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'PM0D1-SEARK'.
*        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*        PERFORM BDC_FIELD       USING 'PPHDR-PLVAR' '01'.
*        PERFORM BDC_FIELD       USING 'PPHDR-OTYPE' 'S'.
*        PERFORM BDC_FIELD       USING 'PM0D1-SEARK' INF_0001-PLANS.
*        PERFORM BDC_FIELD       USING 'PPHDR-BEGDA' '01.01.1800'.
*        PERFORM BDC_FIELD       USING 'PPHDR-ENDDA' '31.12.9999'.
*        PERFORM BDC_FIELD       USING 'PM0D1-TIMRD' 'X'.

      PERFORM BDC_DYNPRO      USING 'SAPMH5A0' '5000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'PM0D1-SEARK'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=LIST'.
      PERFORM BDC_FIELD       USING 'PPHDR-PLVAR' '01'.
      PERFORM BDC_FIELD       USING 'PPHDR-OTYPE' 'S'.
      PERFORM BDC_FIELD       USING 'PM0D1-SEARK' INF_0001-PLANS.
      PERFORM BDC_FIELD       USING 'PPHDR-BEGDA' '01.01.1800'.
      PERFORM BDC_FIELD       USING 'PPHDR-ENDDA' '31.12.9999'.
      PERFORM BDC_FIELD       USING 'MARKFELD(02)' 'X'.
      PERFORM BDC_FIELD       USING 'PM0D1-TIMRD' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP100100' '3000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P1001-BEGDA(02)'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=COP'.
      PERFORM BDC_FIELD       USING 'PPHDX-PAGE_NR' '1'.
      PERFORM BDC_FIELD       USING 'LINE_SEL(02)' 'X'.

      PERFORM BDC_DYNPRO      USING 'MP100100' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P1001-PROZT'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'P1001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P1001-ENDDA' '31.12.9999'.
      PERFORM BDC_FIELD       USING 'P1001-RSIGN' 'A'.
      PERFORM BDC_FIELD       USING 'P1001-RELAT' '008'.
      PERFORM BDC_FIELD       USING 'P1001-SCLAS' 'P'.
      PERFORM BDC_FIELD       USING 'P1001-SOBID' PERNR.
      PERFORM BDC_FIELD       USING 'P1001-PROZT' '0'.
      PERFORM BDC_FIELD       USING 'PPHDX-RECORD_NR' '2'.

      PERFORM BDC_DYNPRO      USING 'MP100100' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P1001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P1001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P1001-ENDDA' '31.12.9999'.
      PERFORM BDC_FIELD       USING 'P1001-RSIGN' 'A'.
      PERFORM BDC_FIELD       USING 'P1001-RELAT' '008'.
      PERFORM BDC_FIELD       USING 'P1001-SCLAS' 'P'.
      PERFORM BDC_FIELD       USING 'P1001-SOBID' PERNR.
      PERFORM BDC_FIELD       USING 'P1001-PROZT' '0'.
      PERFORM BDC_FIELD       USING 'PPHDX-RECORD_NR' '2'.

      PERFORM BDC_DYNPRO      USING 'MP100100' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P1001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P1001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P1001-ENDDA' '31.12.9999'.
      PERFORM BDC_FIELD       USING 'P1001-PROZT' '0'.

      PERFORM BDC_DYNPRO      USING 'MP100100' '3000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'PPHDX-PAGE_NR'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=RET'.
      PERFORM BDC_FIELD       USING 'PPHDX-PAGE_NR' '1'.

      PERFORM BDC_DYNPRO      USING 'SAPMH5A0' '5000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'PM0D1-SEARK'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=BACK'.
      PERFORM BDC_FIELD       USING 'PPHDR-PLVAR' '01'.
      PERFORM BDC_FIELD       USING 'PPHDR-OTYPE' 'S'.
      PERFORM BDC_FIELD       USING 'PM0D1-SEARK' INF_0001-PLANS.

*        PERFORM BDC_TRANSACTION USING 'PP01'.

      CALL TRANSACTION 'PP01' USING BDCDATA MODE MODE UPDATE 'L' MESSAGES INTO MESSTAB.
*-------------------------------------------------
    ELSEIF MASSN = 'AC' OR MASSN = 'AE' OR MASSN = 'AG' OR MASSN = 'AH'.
* данные по текущему орг.присвоению
      SELECT SINGLE * FROM PA0001 INTO INF_0001 WHERE PERNR = PERNR
        AND   BEGDA <= Z_BEGDA
        AND   ENDDA >= Z_BEGDA.

      CLEAR BDCDATA.
      REFRESH BDCDATA.

* Определяем данные по текущему орг.присвоению
      SELECT SINGLE * FROM HRP1001 INTO Z_PA1001
                        WHERE SOBID = NUMBER
                        AND   OTYPE = 'S'
                        AND   PLVAR = '01'
                        AND   RSIGN = 'A'
                        AND   RELAT = '008'
                        AND   SCLAS = 'P'
                        AND   ENDDA = '99991231'.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'T529T-MNTXT(11)'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=PICK'.
      PERFORM BDC_FIELD       USING 'RP50G-EINDA' BEGDA.
      PERFORM BDC_FIELD       USING 'RP50G-SELEC(11)' 'X'.
      PERFORM BDC_FIELD       USING 'RP50G-PERNR' PERNR.

* Определяем БС, раздел персонала и т.д. по ш.д.
*      SELECT SINGLE * FROM PA0001 WHERE PLANS = PLANS.

      CLEAR HRP1001.
* Определяем МВЗ, вначале по ш.д., если нет - по упр, если нет - по деп
      SELECT SINGLE * FROM HRP1001
                WHERE OBJID = PLANS
                AND   OTYPE = 'S'
                AND   PLVAR = '01'
                AND   RSIGN = 'A'
                AND   RELAT = '011'
                AND   SCLAS = 'K'
                AND   ENDDA >= Z_BEGDA
                AND   BEGDA <= Z_BEGDA.
      IF SY-SUBRC = 0.
        LV_KOSTL = HRP1001-SOBID.
      ELSE.
        CLEAR HRP1001.
        SELECT SINGLE * FROM HRP1001
                          WHERE OBJID = ORGEH1
                          AND   OTYPE = 'O'
                          AND   PLVAR = '01'
                          AND   RSIGN = 'A'
                          AND   RELAT = '011'
                          AND   SCLAS = 'K'
                          AND   ENDDA >= Z_BEGDA
                          AND   BEGDA <= Z_BEGDA.
        IF SY-SUBRC = 0.
          LV_KOSTL = HRP1001-SOBID.
        ELSE.
          CLEAR HRP1001.
          SELECT SINGLE * FROM HRP1001
                            WHERE OBJID = ORGEH2
                            AND   OTYPE = 'O'
                            AND   PLVAR = '01'
                            AND   RSIGN = 'A'
                            AND   RELAT = '011'
                            AND   SCLAS = 'K'
                            AND   ENDDA >= Z_BEGDA
                            AND   BEGDA <= Z_BEGDA.
          IF SY-SUBRC = 0.
            LV_KOSTL = HRP1001-SOBID.
          ENDIF.
        ENDIF.
      ENDIF.

      DATA LV_WERKS TYPE PERSA." РАЗДЕЛ ПЕРС
      DATA LV_ORGEH3 TYPE ORGEH." ФИЛИАЛ
      DATA LV_BTRTL TYPE HRP1008-BTRTL."ПОДРАЗДЕЛ
      LV_WERKS = I_WERKS.

*--------------------------------------------------------------------*
* Ищем подраздел персонала ( LV_BTRTL ) по LV_ORGEH2 (по Департаменту), если нет
* то по LV_ORGEH3 (по Филиалу)  Добавлено 26.02.2014 Асель К. 00018688
      CLEAR HRP1008.
      SELECT SINGLE * FROM HRP1008
                        WHERE OBJID = ORGEH2
                        AND   OTYPE = 'O'
                        AND   PLVAR = '01'
                        AND   GSBER = GEBER
                        AND   PERSA = LV_WERKS
                        AND   ENDDA >= Z_BEGDA
                        AND   BEGDA <= Z_BEGDA.
      IF SY-SUBRC = 0.
        LV_BTRTL = HRP1008-BTRTL.
      ELSE.

        CLEAR HRP1001.
        SELECT SINGLE * FROM HRP1001
                          WHERE OBJID = ORGEH2
                          AND   OTYPE = 'O'
                          AND   PLVAR = '01'
                          AND   RSIGN = 'A'
                          AND   RELAT = '002'
                          AND   SCLAS = 'O'
                          AND   ENDDA >= Z_BEGDA
                          AND   BEGDA <= Z_BEGDA.
        IF SY-SUBRC = 0.
          LV_ORGEH3 = HRP1001-SOBID.
        ENDIF.
        IF LV_ORGEH3 = '50000363'." если вышестоящая орг ед. - НБ, то ищи подраздел по орг ед2
          LV_ORGEH3 = ORGEH2.
        ENDIF.
        CLEAR HRP1008.
        SELECT SINGLE * FROM HRP1008
                          WHERE OBJID = LV_ORGEH3
                          AND   OTYPE = 'O'
                          AND   PLVAR = '01'
                          AND   GSBER = GEBER
                          AND   PERSA = LV_WERKS
                          AND   ENDDA >= Z_BEGDA
                          AND   BEGDA <= Z_BEGDA.
        IF SY-SUBRC = 0.
          LV_BTRTL = HRP1008-BTRTL.
        ENDIF.
      ENDIF.

      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PLANS' PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-WERKS' LV_WERKS.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSG' PERSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSK' PERSK.

      PERFORM BDC_DYNPRO      USING 'MP000000' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0000-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P0000-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0000-MASSN' MASSN.
      PERFORM BDC_FIELD       USING 'P0000-MASSG' MASSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PLANS' PLANS.
      PERFORM BDC_FIELD       USING 'PSPAR-WERKS' LV_WERKS.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSG' PERSG.
      PERFORM BDC_FIELD       USING 'PSPAR-PERSK' PERSK.
***
**** Находим ставку по шд
      DATA: WRKT_TAB LIKE P1011 OCCURS 0 WITH HEADER LINE.
      DATA: FULL TYPE P DECIMALS 2 VALUE '173.60'.
      DATA: PROZST TYPE HR_PROZ_IN.
      DATA: PROZ_ST TYPE CHAR6.

      CALL FUNCTION 'RH_PM_GET_WORKTIME'
        EXPORTING
          PLVAR        = '01'
          OTYPE        = 'S'
          OBJID        = PLANS
          ISTAT        = '1'
          BEGDA        = Z_BEGDA
          ENDDA        = Z_BEGDA
        TABLES
          WORKTIME_TAB = WRKT_TAB.
      PROZST = WRKT_TAB-MOAVG * 100 / FULL .
      MOVE PROZST TO PROZ_ST.
      REPLACE SUBSTRING '.' IN PROZ_ST WITH ','.
      CONDENSE PROZ_ST.
***
      PERFORM BDC_DYNPRO      USING 'MP000100' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'." =UPD
      PERFORM BDC_FIELD       USING 'P0001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0001-ENDDA' '31129999'.
      PERFORM BDC_FIELD       USING 'P0001-BTRTL' LV_BTRTL.
      PERFORM BDC_FIELD       USING 'P0001-KOSTL' LV_KOSTL.
      PERFORM BDC_FIELD       USING 'P0001-FISTL' FISTL.
      PERFORM BDC_FIELD       USING 'P0001-GSBER' GEBER.
      PERFORM BDC_FIELD       USING 'P0001-GEBER' GEBER.
      PERFORM BDC_FIELD       USING 'P0001-ANSVH' DOGONAYME.
*      PERFORM BDC_FIELD       USING 'PPRHPR-PROZT' PROZ_ST.
      PERFORM BDC_FIELD       USING 'P0001-PLANS' PLANS.

      PERFORM BDC_DYNPRO      USING 'MP000100' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.

      PERFORM BDC_DYNPRO      USING 'MP000100' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0001-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P0001-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0001-ENDDA' '31129999'.
      PERFORM BDC_FIELD       USING 'P0001-BTRTL' LV_BTRTL.
      PERFORM BDC_FIELD       USING 'P0001-GSBER' GEBER.
      PERFORM BDC_FIELD       USING 'P0001-FISTL' FISTL.
      PERFORM BDC_FIELD       USING 'P0001-GEBER' GEBER.
      PERFORM BDC_FIELD       USING 'P0001-ANSVH' DOGONAYME.
*      PERFORM BDC_FIELD       USING 'PPRHPR-PROZT' PROZ_ST.
      PERFORM BDC_FIELD       USING 'P0001-PLANS' PLANS.

      IF DOGONAYME = '01'.
        PERFORM BDC_DYNPRO      USING 'SAPMSSY0' '0120'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' '04/03'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=CANC'.
*        SELECT * FROM PA0034 WHERE PERNR = PERNR.
*          PERFORM BDC_DYNPRO      USING 'MP003400' '2000'.
*          PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0034-BEGDA'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/ENXT'.
*        ENDSELECT.
*        IF SY-SUBRC <> 0.
*          PERFORM BDC_DYNPRO      USING 'MP003400' '2000'.
*          PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0034-BEGDA'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/ENXT'.
*        ENDIF.
      ELSEIF DOGONAYME = '02'.
        PERFORM BDC_DYNPRO      USING 'SAPMSSY0' '0120'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' '08/26'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=PICK'.
*        IF MASSN = 'AH'.
*          PERFORM BDC_DYNPRO      USING 'MP003400' '2000'.
*          PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0034-BEGDA'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*          PERFORM BDC_FIELD       USING 'P0034-BEGDA' BEGDA.
*          PERFORM BDC_FIELD       USING 'P0034-ENDDA'  '31129999'.
*          PERFORM BDC_FIELD       USING 'P0034-FUNKT'  '05'.
*          PERFORM BDC_FIELD       USING 'RP50M-TEXT1'  TEXT1.
*          PERFORM BDC_FIELD       USING 'RP50M-TEXT2'  TEXT2.
*          PERFORM BDC_FIELD       USING 'RP50M-TEXT3'  TEXT3.
*          PERFORM BDC_FIELD       USING 'P0034-DAT34'  BEGDA.
*        ELSE.
*        SELECT * FROM PA0034 WHERE PERNR = PERNR AND SUBTY = '05' .
        PERFORM BDC_DYNPRO      USING 'MP003400' '2000'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0034-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
        PERFORM BDC_FIELD       USING 'P0034-BEGDA' BEGDA.
        PERFORM BDC_FIELD       USING 'P0034-ENDDA'  '31129999'.
        PERFORM BDC_FIELD       USING 'P0034-FUNKT'  '05'.
        PERFORM BDC_FIELD       USING 'RP50M-TEXT1'  TEXT1.
        PERFORM BDC_FIELD       USING 'RP50M-TEXT2'  TEXT2.
        PERFORM BDC_FIELD       USING 'RP50M-TEXT3'  TEXT3.
        PERFORM BDC_FIELD       USING 'P0034-DAT34'  BEGDA.
*        ENDSELECT.
*        IF SY-SUBRC <> 0.
*          PERFORM BDC_DYNPRO      USING 'MP003400' '2000'.
*          PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0034-BEGDA'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*          PERFORM BDC_FIELD       USING 'P0034-BEGDA' BEGDA.
*          PERFORM BDC_FIELD       USING 'P0034-ENDDA'  '31129999'.
*          PERFORM BDC_FIELD       USING 'P0034-FUNKT'  '05'.
*          PERFORM BDC_FIELD       USING 'RP50M-TEXT1'  TEXT1.
*          PERFORM BDC_FIELD       USING 'RP50M-TEXT2'  TEXT2.
*          PERFORM BDC_FIELD       USING 'RP50M-TEXT3'  TEXT3.
*          PERFORM BDC_FIELD       USING 'P0034-DAT34'  BEGDA.
*        ENDIF.
*        ENDIF.
      ENDIF.

*      IF DOGONAYME = '01' AND MASSN = 'AC'.
*        PERFORM BDC_DYNPRO      USING 'SAPLSPO1' '0200'.
*        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=YES'.
*      ENDIF.

* Компоненты договора
      SELECT * FROM PA0016 INTO TABLE Z_PA0016
                        WHERE PERNR = PERNR.

      SORT Z_PA0016 BY ENDDA DESCENDING.
      READ TABLE Z_PA0016 INDEX 1.
      DATA Z_CANUM TYPE PA0016-CANUM.
      Z_CANUM = Z_PA0016-CANUM + 1.

*      PERFORM BDC_DYNPRO      USING 'MP001600' '2033'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0016-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P0016-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P0016-ENDDA' '31129999'.
*      PERFORM BDC_FIELD       USING 'P0016-CTNUM' Z_PA0016-CTNUM.
*      PERFORM BDC_FIELD       USING 'P0016-CANUM' Z_CANUM.
*      PERFORM BDC_FIELD       USING 'P0016-CTTYP' VIDDOG.
**      PERFORM BDC_FIELD       USING 'P0016-CTBEG' Z_PA0016-CTBEG.
*      IF VIDDOG = '1'.
*        PERFORM BDC_FIELD       USING 'P0016-CTEDT' ENDDA.
*      ENDIF.
*      IF PERSG = '1' AND ( MASSN = 'AG' OR MASSN = 'AH' ) AND
*        MASSG = '01'.
*        PERFORM BDC_FIELD       USING 'P0016-WTTKL' 'X'.
*      ELSE.
*        PERFORM BDC_FIELD       USING 'P0016-WTTKL' ''.
*      ENDIF.

*      PERFORM BDC_DYNPRO      USING 'MP001600' '2033'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0016-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*
*      PERFORM BDC_DYNPRO      USING 'MP001600' '2033'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0016-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.

      PERFORM BDC_DYNPRO      USING 'MP001600' '2033'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0016-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P0016-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0016-ENDDA' '31129999'.
      PERFORM BDC_FIELD       USING 'P0016-CTNUM' Z_PA0016-CTNUM.
      PERFORM BDC_FIELD       USING 'P0016-CANUM' Z_CANUM.
      PERFORM BDC_FIELD       USING 'P0016-CTTYP' VIDDOG.
*      PERFORM BDC_FIELD       USING 'P0016-CTBEG' Z_PA0016-CTBEG.
      IF VIDDOG = '1'.
        PERFORM BDC_FIELD       USING 'P0016-CTEDT' ENDDA.
*{   INSERT         DHRK928487                                       20
      ELSEIF VIDDOG = '2'.
        PERFORM BDC_FIELD       USING 'P0016-CTEDT' '31129999'. "@IK 14/07/2015 Вид договора на неопределенный срок
*}   INSERT
      ENDIF.
      IF PERSG = '1' AND ( MASSN = 'AG' OR MASSN = 'AH' ) AND
      MASSG = '01'.
        PERFORM BDC_FIELD       USING 'P0016-WTTKL' 'X'.
      ELSE.
        PERFORM BDC_FIELD       USING 'P0016-WTTKL' ''.
      ENDIF.

*      PERFORM BDC_DYNPRO      USING 'MP000700' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0007-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
*      PERFORM BDC_FIELD       USING 'P0007-BEGDA' BEGDA.
*      PERFORM BDC_FIELD       USING 'P0007-SCHKZ' SCHKZ.

      PERFORM BDC_DYNPRO      USING 'MP000700' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0007-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P0007-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0007-SCHKZ' SCHKZ.

* Для структурного перевода вводим Налоговый комитет
      IF MASSN = 'AG' AND LV_WERKS <> '0101' AND INF_0001-WERKS = '0101'.
        PERFORM BDC_DYNPRO      USING 'MP029100' '3000'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0291-BEGDA(01)'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=DLIM'.
        PERFORM BDC_FIELD       USING 'RP50M-BEGDA' BEGDA.
        PERFORM BDC_FIELD       USING 'RP50M-ENDDA' '31129999'.
        PERFORM BDC_FIELD       USING 'RP50M-SUBTY' 'TX'.
        PERFORM BDC_FIELD       USING 'RP50M-PAGEA' '1'.
        PERFORM BDC_FIELD       USING 'RP50M-SELE2(01)' 'X'.
      ELSEIF MASSN = 'AG' AND LV_WERKS = '0101' AND INF_0001-WERKS <> '0101'.
        PERFORM BDC_DYNPRO      USING 'MP029100' '2000'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0291-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
        PERFORM BDC_FIELD       USING 'P0291-BEGDA' BEGDA.
        PERFORM BDC_FIELD       USING 'P0291-ENDDA' '31129999'.
        PERFORM BDC_FIELD       USING 'P0291-TAXNU' 'TX'.
        PERFORM BDC_FIELD       USING 'P0291-FZAMT' '101'.
      ENDIF.

* Установка нового оклада, кроме AC
      IF MASSN = 'AC'.

        DATA: INF_0008 LIKE PA0008.      " Добавлено 25.10.2012 Асель К. 00018688
        DATA: Z_BET01 TYPE PAD_AMT7S.

        SELECT SINGLE * FROM PA0008 INTO INF_0008 WHERE PERNR = PERNR
             AND   BEGDA <= Z_BEGDA
             AND   ENDDA >= Z_BEGDA.

        Z_BET01 = INF_0008-BET01.

        PERFORM BDC_DYNPRO      USING 'MP000800' '2000'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0008-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
        PERFORM BDC_FIELD       USING 'P0008-BEGDA' BEGDA.
        PERFORM BDC_FIELD       USING 'P0008-ENDDA' '31129999'.
        PERFORM BDC_FIELD       USING 'P0008-PREAS' '00'.

        WRITE Z_BET01 TO FVAL.
        CONDENSE FVAL.
*        PERFORM BDC_FIELD       USING 'Q0008-BETRG(01)' FVAL.
      ELSE.
        PERFORM BDC_DYNPRO      USING 'MP000800' '2000'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0008-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
        PERFORM BDC_FIELD       USING 'P0008-BEGDA' BEGDA.
        PERFORM BDC_FIELD       USING 'P0008-ENDDA' '31129999'.
        IF MASSN = 'AD'.
          PERFORM BDC_FIELD       USING 'P0008-PREAS' '01'.
        ELSE.
          PERFORM BDC_FIELD       USING 'P0008-PREAS' '00'.
        ENDIF.
*        IF MASSN <> 'AH'.
        PERFORM BDC_FIELD       USING 'Q0008-LGART(01)' '1010'.
*        ENDIF.
        WRITE OKLAD TO FVAL.
        CONDENSE FVAL.
        PERFORM BDC_FIELD       USING 'Q0008-BETRG(01)' FVAL.

* Установка добавки по экологии, если есть
        IF ANZHL IS NOT INITIAL.
          PERFORM BDC_DYNPRO      USING 'MP000800' '2000'.
          PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0008-BEGDA'.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
          PERFORM BDC_FIELD       USING 'P0008-BEGDA' BEGDA.
          PERFORM BDC_FIELD       USING 'P0008-ENDDA' '31129999'.
          IF MASSN = 'AD'.
            PERFORM BDC_FIELD       USING 'P0008-PREAS' '01'.
          ELSE.
            PERFORM BDC_FIELD       USING 'P0008-PREAS' '00'.
          ENDIF.

          IF ZEINH = '030'." %
            PERFORM BDC_FIELD       USING 'Q0008-LGART(02)' '1100'.
          ELSEIF ZEINH = '900'." МРП
            PERFORM BDC_FIELD       USING 'Q0008-LGART(02)' '1101'.
          ENDIF.
          CLEAR FVAL.
          WRITE ANZHL TO FVAL.
          CONDENSE FVAL.
          PERFORM BDC_FIELD       USING 'Q0008-ANZHL(02)' FVAL.
          CLEAR FVAL.

        ENDIF.
* Установка перс добавки, если есть
        IF PERSO IS NOT INITIAL.
          PERFORM BDC_DYNPRO      USING 'MP000800' '2000'.
          PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0008-BEGDA'.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
          PERFORM BDC_FIELD       USING 'P0008-BEGDA' BEGDA.
          PERFORM BDC_FIELD       USING 'P0008-ENDDA' '31129999'.
          IF MASSN = 'AD'.
            PERFORM BDC_FIELD       USING 'P0008-PREAS' '01'.
          ELSE.
            PERFORM BDC_FIELD       USING 'P0008-PREAS' '00'.
          ENDIF.
          PERFORM BDC_FIELD       USING 'Q0008-LGART(03)' '1120'.
          CLEAR FVAL.
          WRITE PERSO TO FVAL.
          CONDENSE FVAL.
          PERFORM BDC_FIELD       USING 'Q0008-BETRG(03)' FVAL.
          CLEAR FVAL.
        ENDIF.
      ENDIF.

      PERFORM BDC_DYNPRO      USING 'MP000800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR'
                                    'P0008-BEGDA'.
      PERFORM BDC_FIELD       USING 'P0008-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P0008-ENDDA' '31129999'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE'
                                    '=UPD'.

      PERFORM BDC_DYNPRO      USING 'MP001700' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0017-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.
      PERFORM BDC_FIELD       USING 'P0017-ERKLA' '1'.

* Опеределение значения поля P0017-ERGRU
      IF PERSK = '48'.
        LV_ERGRU = '2'.
        LV_SPEBE = '1'.
      ENDIF.
      IF ( ORGEH1 = '50000077' OR ORGEH2 = '50000077' ) AND
            Z_HILFM <> '005'.
        LV_ERGRU = '5'.
        LV_SPEBE = '3'.
      ELSE.
        IF ( Z_HILFM = '004' OR Z_HILFM = '005') AND PERSK <> '48' .
          LV_ERGRU = '3'.
          LV_SPEBE = '2'.
        ELSE.
          IF GEBER = '01'.
            IF ( PERSK = '41' OR PERSK = '43' OR PERSK = '44' ).
              LV_ERGRU = '4'.
              LV_SPEBE = '3'.
            ENDIF.
          ELSE.
            IF PERSK <> '42' AND PERSK <> '44'.
              LV_ERGRU = '1'.
              LV_SPEBE = '3'.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDIF.

*      PERFORM BDC_DYNPRO      USING 'MP001700' '2000'.
*      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0017-BEGDA'.
*      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/00'.

      PERFORM BDC_DYNPRO      USING 'MP001700' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0017-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.

      PERFORM BDC_FIELD       USING 'P0017-ERGRU' LV_ERGRU.
      PERFORM BDC_FIELD       USING 'P0017-SPEBE' LV_SPEBE.
      PERFORM BDC_FIELD       USING 'P0017-BUKRS' '1'.
      PERFORM BDC_FIELD       USING 'P0017-GSBER' GEBER.

*{   REPLACE        DHRK928449                                       18
*\      PERFORM BDC_DYNPRO      USING 'MP029400' '2033'.
      PERFORM BDC_DYNPRO      USING 'MP029400' '2000'. "13/07/2015 Название экрана Трудовая книжка
*}   REPLACE
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0294-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P0294-BEGDA' BEGDA.

      PERFORM BDC_DYNPRO      USING 'SAPMSSY0' '0120'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' '04/03'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=ENTR'.

      PERFORM BDC_DYNPRO      USING 'MP910500' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P9105-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
      PERFORM BDC_FIELD       USING 'P9105-BEGDA' BEGDA.
      PERFORM BDC_FIELD       USING 'P9105-ENDDA' '31129999'.
      PERFORM BDC_FIELD       USING 'P9105-ZKVALO' OBRAZ.
      PERFORM BDC_FIELD       USING 'P9105-ZKVAKR' OPYT.

* для AG и AH необходимо обновить лимиты в случае изменения экологии и
* категории сотрудника
*{   REPLACE        DHRK928497                                       21
*\      IF MASSN = 'AG' OR MASSN = 'AH'.
      IF ( MASSN = 'AG' OR MASSN = 'AH' ) AND 1 = 0. "@IK 15/07/2015 Отключим лимиты по экологии в основном мероприятии
*}   REPLACE
        DATA: NACH_GODA  TYPE D,
              KON_GODA   TYPE D,
              ZNACH_GODA TYPE D.
        CONCATENATE '0101' BEGDA+4 INTO NACH_GODA.
        CONCATENATE '3112' BEGDA+4 INTO KON_GODA.
        CONCATENATE BEGDA+4 '0101' INTO ZNACH_GODA.

* если категория поменялась, то внести изменение лимитов отсутствия
        PERFORM BDC_DYNPRO      USING 'MP200000'    '2250'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR'  'P2006-BEGDA'.
        IF INF_0001-PERSK <> PERSK AND ( INF_0001-PERSK = '47' OR PERSK = '47' ) .
          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=UPD'.
          PERFORM BDC_FIELD       USING 'P2006-BEGDA' NACH_GODA." начало года
          PERFORM BDC_FIELD       USING 'P2006-ENDDA' KON_GODA." конец года
          PERFORM BDC_FIELD       USING 'P2006-KTART' '20'." вид отпуска
* определение дней отпуска
          IF PERSK = '47'.
            PERFORM BDC_FIELD       USING 'P2006-ANZHL' '24'." дни отпуска
          ELSE.
            PERFORM BDC_FIELD       USING 'P2006-ANZHL' '26'." дни отпуска
          ENDIF.
          PERFORM BDC_FIELD       USING 'P2006-DESTA' NACH_GODA." начало года
          PERFORM BDC_FIELD       USING 'P2006-DEEND' '31129999'." срок по
        ELSE.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '/ENXT'.
        ENDIF.

        DATA INF_2006 TYPE PA2006. " Добавлено Асель К. 10.08.2012
* проверка на наличие ЛИМИТА экологии У СОТРУДНИКА по текущей штатке
        SELECT * FROM PA2006 INTO INF_2006
          WHERE PERNR = PERNR AND SUBTY = '22' AND
          BEGDA >= ZNACH_GODA AND ENDDA > Z_BEGDA.
* то экологический отпуск положен
          PERFORM BDC_DYNPRO      USING 'MP200000'    '2250'.
          PERFORM BDC_FIELD       USING 'BDC_CURSOR'  'P2006-BEGDA'.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '/ENXT'.
        ENDSELECT.
      ENDIF.

* @IK 07/10/2015 Пропускаем экран экологии, для мероприятия Временные переводы
      IF MASSN = 'AH'.
        PERFORM BDC_DYNPRO      USING 'MP200000'    '2250'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR'  'P2006-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '/ENXT'.
      ENDIF.

      IF MASSN = 'AG'.
*{   REPLACE        DHRK928449                                       19
*\        PERFORM BDC_DYNPRO      USING 'MP029000' '2950'.
        PERFORM BDC_DYNPRO      USING 'MP029000' '2671'."@IK Документы изменено на основании upgrade изменился номер экрана
*}   REPLACE
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0290-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/ENXT'.

        PERFORM BDC_DYNPRO      USING 'MP029000' '2000'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0290-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/ENXT'.

        PERFORM BDC_DYNPRO      USING 'MP000600' '2033'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0006-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/ENXT'.

        PERFORM BDC_DYNPRO      USING 'MP000600' '2033'.
        PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0006-BEGDA'.
        PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/ENXT'.
      ENDIF.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=AUTO'.
*{   DELETE         DHRK927631                                       16
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
* По работникам, которые приняты до 01.07.2007 заполняется поле ZDOPS1, по остальным поле ZDOPS2.
      IF Z_PA0016-EINDT < '20070701'.
        PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.
      ELSE.
        PERFORM BDC_FIELD       USING 'P0298-ZDOPS2' 'X'.
      ENDIF.

      IF PERSK = '48'.
        IF Z_HILFM = '003'.
          ZOBJID = '50000807'.
        ELSE.
          ZOBJID = '50000775'.
        ENDIF.
      ELSEIF PERSK = '42' OR PERSK = '44'.
        ZOBJID = '50000807'.
      ELSE.
        IF GEBER = '01' .
          ZOBJID = '50000807'.
        ELSEIF GEBER = '11'.
          ZOBJID = '50034791'.
        ELSEIF   GEBER = '12'.
          ZOBJID = '50005419'.
        ELSEIF   GEBER = '13'.
          ZOBJID = '50034789'.
        ELSEIF   GEBER = '14'.
          ZOBJID = '50009548'.
        ELSEIF   GEBER = '15'.
          ZOBJID = '50006276'.
        ELSEIF   GEBER = '16'.
          ZOBJID = '50011037'.
        ELSEIF   GEBER = '17'.
          ZOBJID = '50008145'.
        ELSEIF   GEBER = '18'.
          ZOBJID = '50012006'.
        ELSEIF   GEBER = '19'.
          ZOBJID = '50013483'.
        ELSEIF   GEBER = '20'.
          ZOBJID = '50013882'.
        ELSEIF   GEBER = '22'.
          ZOBJID = '50011682'.
        ELSEIF   GEBER = '23'.
          ZOBJID = '50012691'.
        ELSEIF   GEBER = '24'.
          ZOBJID = '50015056'.
        ELSEIF   GEBER = '25'.
          ZOBJID = '50014911'.
        ELSEIF   GEBER = '26'.
          ZOBJID = '50015050'.
        ELSEIF   GEBER = '29'.
          ZOBJID = '50010031'.
        ELSEIF   GEBER = '31'.
          ZOBJID = '50005799'.
        ELSEIF   GEBER = '32'.
          ZOBJID = '50008906'.
        ELSEIF   GEBER = '33'.
          ZOBJID = '50002294'.
        ELSEIF   GEBER = '35'.
          ZOBJID = '50042580'.
        ELSEIF   GEBER = '36'.
          ZOBJID = '50042727'.
        ELSEIF   GEBER = '37'.
          ZOBJID = '50042782'.
        ENDIF.
      ENDIF.
      SELECT * FROM HRP1001
                        WHERE OBJID = ZOBJID
                        AND   OTYPE = 'S'
                        AND   PLVAR = '01'
                        AND   RSIGN = 'A'
                        AND   RELAT = '008'
                        AND   SCLAS = 'P'
                        AND   ENDDA >= Z_BEGDA
                        AND   BEGDA <= Z_BEGDA.
      ENDSELECT.
      PERFORM BDC_FIELD       USING 'P0298-ZZPERNR1' HRP1001-SOBID.

      PERFORM BDC_DYNPRO      USING 'MP029800' '2000'.
      PERFORM BDC_FIELD       USING 'BDC_CURSOR' 'P0298-BEGDA'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '=UPD'.
*{   DELETE         DHRK927631                                       17
*\      PERFORM BDC_FIELD       USING 'P0298-BEGDA' BEGDA.
*}   DELETE
      PERFORM BDC_FIELD       USING 'P0298-MASSS' '01'.
      PERFORM BDC_FIELD       USING 'P0298-ORDDT' Z_DATUM.
      IF Z_PA0016-EINDT < '20070701'.
        PERFORM BDC_FIELD       USING 'P0298-ZDOPS1' 'X'.
      ELSE.
        PERFORM BDC_FIELD       USING 'P0298-ZDOPS2' 'X'.
      ENDIF.
      PERFORM BDC_FIELD       USING 'P0298-ZZPERNR1' HRP1001-SOBID.

      PERFORM BDC_DYNPRO      USING 'SAPMP50A' '2200'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE' '/EBCK'.

      REFRESH MESSTAB.

      "--------------------------------------------------------------------------------------
      " added by Noir N. handle future limits of absence.
      " Если есть лимит отсутствий за будущий год, то его нужно убрать на время выполнения
      " пакетника, иначе пакетник неправильно отрабатывает на лимитах отсутствий.

      DATA: LT_T_FPA2006 TYPE STANDARD TABLE OF PA2006.

      SELECT * FROM PA2006 INTO TABLE LT_T_FPA2006 WHERE PERNR = PERNR AND BEGDA > Z_BEGDA.

      DELETE FROM PA2006 WHERE  PERNR = PERNR AND BEGDA  > Z_BEGDA.

      COMMIT WORK AND WAIT.
      "--------------------------------------------------------------------------------------


      CALL TRANSACTION 'PA40' USING BDCDATA
                             MODE   MODE
                             UPDATE 'L'
                             MESSAGES INTO MESSTAB.

      IF SY-SUBRC = 0.
        " Ищем Сообщение об ошибке
        IF MESSTAB IS NOT INITIAL.
          LOOP AT MESSTAB TRANSPORTING NO FIELDS WHERE MSGTYP = 'E' OR MSGTYP = 'A'.
          ENDLOOP.
          IF SY-SUBRC <> 0.
            DONE = 'X'.
          ENDIF.
        ELSE.
          DONE = 'X'.
          S_BAPIRET-MESSAGE = 'Ошибка создания мероприятия.'.
          APPEND S_BAPIRET TO T_RETURN.
        ENDIF.
      ENDIF.

      " Обработка сообщений

      LOOP AT MESSTAB ASSIGNING <MESSTAB>.
        CLEAR: S_BAPIRET.

        S_BAPIRET-TYPE = <MESSTAB>-MSGTYP.
        S_BAPIRET-ID = <MESSTAB>-MSGID.
        S_BAPIRET-NUMBER = <MESSTAB>-MSGNR.
        S_BAPIRET-MESSAGE_V1 = <MESSTAB>-MSGV1.
        S_BAPIRET-MESSAGE_V2 = <MESSTAB>-MSGV2.
        S_BAPIRET-MESSAGE_V3 = <MESSTAB>-MSGV3.
        S_BAPIRET-MESSAGE_V4 = <MESSTAB>-MSGV4.

        CALL FUNCTION 'RPY_MESSAGE_COMPOSE'
          EXPORTING
*           LANGUAGE          = SY-LANGU
            MESSAGE_ID        = S_BAPIRET-ID
            MESSAGE_NUMBER    = S_BAPIRET-NUMBER
            MESSAGE_VAR1      = S_BAPIRET-MESSAGE_V1
            MESSAGE_VAR2      = S_BAPIRET-MESSAGE_V2
            MESSAGE_VAR3      = S_BAPIRET-MESSAGE_V3
            MESSAGE_VAR4      = S_BAPIRET-MESSAGE_V4
          IMPORTING
            MESSAGE_TEXT      = MSG_TXT
*         TABLES
*           LONGTEXT          =
          EXCEPTIONS
            MESSAGE_NOT_FOUND = 1
            OTHERS            = 2.
        IF SY-SUBRC <> 0.
*         MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ELSE.
          IF MSG_TXT IS NOT INITIAL.
            S_BAPIRET-MESSAGE = MSG_TXT.
          ENDIF.
        ENDIF.
        APPEND S_BAPIRET TO T_RETURN.
      ENDLOOP.


      BDCDAT[] = BDCDATA[].


      "--------------------------------------------------------------------------------------
      " added by Noir N. handle future limits of absence.
      " восстановление удаленных лимитов отсутствий

      INSERT PA2006 FROM TABLE LT_T_FPA2006.

      COMMIT WORK AND WAIT.
      "--------------------------------------------------------------------------------------


* Делаем ограничение по штаткам только в случае успешного создания мероприятия  10.05.2012 Асель К.

      IF DONE = 'X'.

****************************************************
        DATA: BEGDA_PREV TYPE SY-DATUM,
              ENDDA_PREV TYPE SY-DATUM.
        DATA REDUN_UPD_FLAG TYPE CHAR1.
* * Определяем штатку по текущему орг.присвоению       " Добавлено 20.05.2013 00018688
        SELECT SINGLE * FROM HRP1001 INTO Z_PA1001
                          WHERE SOBID = NUMBER
                          AND   OTYPE = 'S'
                          AND   PLVAR = '01'
                          AND   RSIGN = 'A'
                          AND   RELAT = '008'
                          AND   SCLAS = 'P'
                          AND   BEGDA < Z_BEGDA
                          AND   ENDDA = '99991231'.

        IF Z_PA1001-OBJID <> PLANS." это значит старая штатка не ограничена, ее надо ограничить
****1. Ограничиваем текущую штатку по таб.н. на дату перевода
          CONCATENATE Z_PA1001-BEGDA+6(2) Z_PA1001-BEGDA+4(2) Z_PA1001-BEGDA+0(4) INTO BEGDA_PREV.
          Z_BEGDA = Z_BEGDA - 1.
          CONCATENATE Z_BEGDA+6(2) Z_BEGDA+4(2) Z_BEGDA+0(4) INTO ENDDA_PREV." ОГР. ЭТОЙ ДАТОЙ

          CLEAR BDCDATA.
          REFRESH BDCDATA.
          REDUN_UPD_FLAG = ''.
* Проверяем, является ли устарешей данная штатка, если устаревшая, надо на время прогона снять замок
          SELECT SINGLE * FROM HRP1014 INTO Z_PA1014
                            WHERE OBJID = Z_PA1001-OBJID
                            AND   OTYPE = 'S'
                            AND   PLVAR = '01'
                            AND   INFTY = '1014'
                            AND   REDUN = 'X'
                            AND   ISTAT = '1'
                            AND   BEGDA <= Z_BEGDA
                            AND   ENDDA = '99991231'.
          IF SY-SUBRC = 0.
            UPDATE HRP1014 SET REDUN = ''
            WHERE OTYPE = 'S' AND OBJID = Z_PA1001-OBJID AND PLVAR = '01' AND
            INFTY = '1014' AND ISTAT = '1' AND BEGDA <= Z_BEGDA AND ENDDA = '99991231'.
            REDUN_UPD_FLAG = 'X'.
          ENDIF.
*--------------------------------------------------------------------*
* Временно удалим 04.12.2013 Асель К. 00018688
*          PERFORM BDC_DYNPRO      USING 'SAPMH5A0'  '1000'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=LIST'.
*          PERFORM BDC_FIELD       USING 'PPHDR-PLVAR'  '01'.
*          PERFORM BDC_FIELD       USING 'PPHDR-OTYPE'  'S'.
*          PERFORM BDC_FIELD       USING 'PM0D1-SEARK'  Z_PA1001-OBJID.
*          PERFORM BDC_FIELD       USING 'PPHDR-INFTY'  '1001'.
*          PERFORM BDC_FIELD       USING 'PPHDR-SUBTY' 'A008'.
*          PERFORM BDC_FIELD       USING 'PPHDR-ISTAT' '1'.
*          CONCATENATE Z_PA1001-BEGDA+6(2) Z_PA1001-BEGDA+4(2) Z_PA1001-BEGDA+0(4) INTO BEGDA_PREV.
*          PERFORM BDC_FIELD       USING 'PPHDR-BEGDA'   BEGDA_PREV.
*          PERFORM BDC_FIELD       USING 'PPHDR-ENDDA'  '31.12.9999'.
*
*          PERFORM BDC_DYNPRO      USING 'MP100100'  '3000'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=AEND'.
**          PERFORM BDC_FIELD       USING 'PPHDX-PAGE_NR' '1'.
*          PERFORM BDC_FIELD       USING 'LINE_SEL(01)' 'X'.
*
*          PERFORM BDC_DYNPRO      USING 'MP100100'  '2000'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '/00'.
*          PERFORM BDC_FIELD       USING 'P1001-BEGDA'  BEGDA_PREV.
*          PERFORM BDC_FIELD       USING 'P1001-ENDDA'  ENDDA_PREV.
*          PERFORM BDC_FIELD       USING 'P1001-RSIGN' 'A'.
*          PERFORM BDC_FIELD       USING 'P1001-RELAT' '008'.
*          PERFORM BDC_FIELD       USING 'P1001-SCLAS' 'P'.
*          PERFORM BDC_FIELD       USING 'P1001-SOBID' NUMBER.
*          PERFORM BDC_FIELD       USING 'P1001-PROZT' '100'.
*
*          PERFORM BDC_DYNPRO      USING 'MP100100'  '2000'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=UPD'.
*          PERFORM BDC_FIELD       USING 'P1001-BEGDA'  BEGDA_PREV.
*          PERFORM BDC_FIELD       USING 'P1001-ENDDA'  ENDDA_PREV.
          Z_BEGDA = Z_BEGDA + 1.
*
*          PERFORM BDC_DYNPRO      USING 'MP100100'  '3000'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=RET'.
*
*          PERFORM BDC_DYNPRO      USING 'SAPMH5A0'  '1000'.
*          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=BACK'.
*
*          CALL TRANSACTION 'PP02' USING BDCDATA
*                     MODE   MODE
*                     UPDATE 'L'
*                     MESSAGES INTO MESSTAB1.
*          CLEAR BEGDA_PREV.
*          COMMIT WORK.
*--------------------------------------------------------------------*
* Добавлено 04.12.2013 Асель К. 00018688
* Ограничение даты конца соединения в 1001 ИТ старой штатки по табельному номеру
          DATA: Z_ENDDA TYPE CHAR8.

          IF MASSN = 'AH' OR MASSN = 'AG' OR  MASSN = 'AC' OR  MASSN = 'AE'.

            SELECT SINGLE * FROM HRP1001 INTO Z_PA1001
                            WHERE SOBID = NUMBER
                            AND   OTYPE = 'S'
                            AND   PLVAR = '01'
                            AND   RSIGN = 'A'
                            AND   RELAT = '008'
                            AND   SCLAS = 'P'
*                          AND   BEGDA < Z_BEGDA
                            AND   ENDDA = '99991231'.

            CONCATENATE ENDDA_PREV+4(4) ENDDA_PREV+2(2) ENDDA_PREV+0(2) INTO Z_ENDDA.
            IF SY-SUBRC = 0.
              UPDATE HRP1001 SET ENDDA = Z_ENDDA
              WHERE OTYPE = 'S' AND PLVAR = '01' AND
              RSIGN = 'A' AND RELAT = '008' AND SCLAS = 'P' AND SOBID = NUMBER AND ENDDA = '99991231'.
              COMMIT WORK.
            ENDIF.

            SELECT SINGLE * FROM HRP1001 INTO Z_PA1001_2
                         WHERE OBJID = NUMBER
                         AND   OTYPE = 'P'
                         AND   PLVAR = '01'
                         AND   RSIGN = 'B'
                         AND   RELAT = '008'
                         AND   SCLAS = 'S'
*                          AND   BEGDA < Z_BEGDA
                         AND   ENDDA = '99991231'.

            CONCATENATE ENDDA_PREV+4(4) ENDDA_PREV+2(2) ENDDA_PREV+0(2) INTO Z_ENDDA.
            IF SY-SUBRC = 0.
              UPDATE HRP1001 SET ENDDA = Z_ENDDA
              WHERE OTYPE = 'P' AND PLVAR = '01' AND
              RSIGN = 'B' AND RELAT = '008' AND SCLAS = 'S' AND OBJID = NUMBER AND ENDDA = '99991231'.
              COMMIT WORK.
            ENDIF.
          ENDIF.
*--------------------------------------------------------------------*
* Проверяем, снимали ли мы замок на этой штатке. Если да, то ставим на место.
          IF REDUN_UPD_FLAG IS NOT INITIAL.
            SELECT SINGLE * FROM HRP1014 INTO Z_PA1014
                              WHERE OBJID = Z_PA1001-OBJID
                              AND   OTYPE = 'S'
                              AND   PLVAR = '01'
                              AND   INFTY = '1014'
                              AND   REDUN = ''
                              AND   ISTAT = '1'
                              AND   BEGDA <= Z_BEGDA
                              AND   ENDDA = '99991231'.
            IF SY-SUBRC = 0.
              UPDATE HRP1014 SET REDUN = 'X'
              WHERE OTYPE = 'S' AND OBJID = Z_PA1001-OBJID AND PLVAR = '01' AND
              INFTY = '1014' AND REDUN = '' AND ISTAT = '1' AND BEGDA <= Z_BEGDA AND ENDDA = '99991231'.
              COMMIT WORK.
            ENDIF.
          ENDIF.
*--------------------------------------------------------------------*
* Добавлено 25.10.2012 Асель К. 00018688

          DATA: MSG_TXT1   TYPE SY-LISEL, S_BAPIRET1 TYPE BAPIRET2.
          FIELD-SYMBOLS:
              <MESSTAB1> TYPE BDCMSGCOLL.

          IF SY-SUBRC = 0.
            " Ищем Сообщение об ошибке
            IF MESSTAB1 IS NOT INITIAL.
              LOOP AT MESSTAB1 TRANSPORTING NO FIELDS WHERE MSGTYP = 'E' OR MSGTYP = 'A'.
              ENDLOOP.
              IF SY-SUBRC <> 0.
                DONE = 'X'.
              ENDIF.
            ELSE.
              DONE = 'X'.
              S_BAPIRET1-MESSAGE = 'Ошибка создания мероприятия.'.
              APPEND S_BAPIRET1 TO T_RETURN.
            ENDIF.
          ENDIF.

          " Обработка сообщений

          LOOP AT MESSTAB1 ASSIGNING <MESSTAB1>.
            CLEAR: S_BAPIRET1.

            S_BAPIRET1-TYPE = <MESSTAB>-MSGTYP.
            S_BAPIRET1-ID = <MESSTAB1>-MSGID.
            S_BAPIRET1-NUMBER = <MESSTAB1>-MSGNR.
            S_BAPIRET1-MESSAGE_V1 = <MESSTAB1>-MSGV1.
            S_BAPIRET1-MESSAGE_V2 = <MESSTAB1>-MSGV2.
            S_BAPIRET1-MESSAGE_V3 = <MESSTAB1>-MSGV3.
            S_BAPIRET1-MESSAGE_V4 = <MESSTAB1>-MSGV4.

            CALL FUNCTION 'RPY_MESSAGE_COMPOSE'
              EXPORTING
*               LANGUAGE          = SY-LANGU
                MESSAGE_ID        = S_BAPIRET1-ID
                MESSAGE_NUMBER    = S_BAPIRET1-NUMBER
                MESSAGE_VAR1      = S_BAPIRET1-MESSAGE_V1
                MESSAGE_VAR2      = S_BAPIRET1-MESSAGE_V2
                MESSAGE_VAR3      = S_BAPIRET1-MESSAGE_V3
                MESSAGE_VAR4      = S_BAPIRET1-MESSAGE_V4
              IMPORTING
                MESSAGE_TEXT      = MSG_TXT1
*         TABLES
*               LONGTEXT          =
              EXCEPTIONS
                MESSAGE_NOT_FOUND = 1
                OTHERS            = 2.
            IF SY-SUBRC <> 0.
*         MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
            ELSE.
              IF MSG_TXT1 IS NOT INITIAL.
                S_BAPIRET1-MESSAGE = MSG_TXT1.
              ENDIF.
            ENDIF.
            APPEND S_BAPIRET1 TO T_RETURN.
          ENDLOOP.

        ENDIF.
        BDCDAT[] = BDCDATA[].
*--------------------------------------------------------------------*
**2. Вносим новое соединение штатки к т.н. с даты перевода
        CLEAR BDCDATA.
        REFRESH BDCDATA.

* Вначале определяем вдруг сотрудник уже сидит на новой должности   " Добавлено 20.05.2013 00018688
        SELECT * FROM HRP1001
                              WHERE OBJID = PLANS
                              AND   OTYPE = 'S'
                              AND   PLVAR = '01'
                              AND   RSIGN = 'A'
                              AND   RELAT = '008'
                              AND   SCLAS = 'P'
                              AND   SOBID = PERNR
                              AND   ENDDA >= Z_BEGDA
                              AND   BEGDA <= Z_BEGDA.
        ENDSELECT.
        IF SY-SUBRC = 4.

          PERFORM BDC_DYNPRO      USING 'SAPMH5A0'  '1000'.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '/00'.
          PERFORM BDC_FIELD       USING 'PPHDR-PLVAR'  '01'.
          PERFORM BDC_FIELD       USING 'PPHDR-OTYPE'  'S'.
          PERFORM BDC_FIELD       USING 'PM0D1-SEARK'  PLANS.
          PERFORM BDC_FIELD       USING 'PPHDR-INFTY'  '1001'.
          PERFORM BDC_FIELD       USING 'PPHDR-SUBTY'  'A008'.
          PERFORM BDC_FIELD       USING 'PPHDR-ISTAT'  '1'.
          CONCATENATE Z_BEGDA+6(2) Z_BEGDA+4(2) Z_BEGDA+0(4) INTO BEGDA_PREV.
          PERFORM BDC_FIELD       USING 'PPHDR-BEGDA'  BEGDA_PREV.
          PERFORM BDC_FIELD       USING 'PPHDR-ENDDA'  '31129999'.

          PERFORM BDC_DYNPRO      USING 'SAPMH5A0'  '1000'.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '/00'.

          PERFORM BDC_DYNPRO      USING 'SAPMH5A0'  '1000'.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=INSE'.
          PERFORM BDC_FIELD       USING 'PPHDR-PLVAR'  '01'.
          PERFORM BDC_FIELD       USING 'PPHDR-OTYPE'  'S'.
          PERFORM BDC_FIELD       USING 'PM0D1-SEARK'  PLANS.
          PERFORM BDC_FIELD       USING 'PPHDR-INFTY'  '1001'.
          PERFORM BDC_FIELD       USING 'PPHDR-SUBTY'  'A008'.
          PERFORM BDC_FIELD       USING 'PPHDR-ISTAT'  '1'.
          CONCATENATE Z_BEGDA+6(2) Z_BEGDA+4(2) Z_BEGDA+0(4) INTO BEGDA_PREV.
          PERFORM BDC_FIELD       USING 'PPHDR-BEGDA'  BEGDA_PREV.
          PERFORM BDC_FIELD       USING 'PPHDR-ENDDA'  '31129999'.

          PERFORM BDC_DYNPRO      USING 'MP100100'  '2000'.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=UPD'.
          PERFORM BDC_FIELD       USING 'P1001-BEGDA'  BEGDA_PREV.
          PERFORM BDC_FIELD       USING 'P1001-ENDDA'  '31129999'.
          PERFORM BDC_FIELD       USING 'P1001-RSIGN'  'A'.
          PERFORM BDC_FIELD       USING 'P1001-RELAT'  '008'.
          PERFORM BDC_FIELD       USING 'P1001-SCLAS'  'P'.
          PERFORM BDC_FIELD       USING 'P1001-SOBID'  PERNR.
          PERFORM BDC_FIELD       USING 'P1001-PROZT'  PROZ_ST.

          PERFORM BDC_DYNPRO      USING 'SAPMH5A0'  '1000'.
          PERFORM BDC_FIELD       USING 'BDC_OKCODE'  '=BACK'.

          CALL TRANSACTION 'PP02' USING BDCDATA
                     MODE   MODE
                     UPDATE 'L'
                     MESSAGES INTO MESSTAB2.
          COMMIT WORK.
*--------------------------------------------------------------------*
* Добавлено 25.10.2012 Асель К. 00018688

          DATA: MSG_TXT2   TYPE SY-LISEL, S_BAPIRET2 TYPE BAPIRET2.
          FIELD-SYMBOLS:
              <MESSTAB2> TYPE BDCMSGCOLL.

          IF SY-SUBRC = 0.
            " Ищем Сообщение об ошибке
            IF MESSTAB2 IS NOT INITIAL.
              LOOP AT MESSTAB2 TRANSPORTING NO FIELDS WHERE MSGTYP = 'E' OR MSGTYP = 'A'.
              ENDLOOP.
              IF SY-SUBRC <> 0.
                DONE = 'X'.
              ENDIF.
            ELSE.
              DONE = 'X'.
              S_BAPIRET2-MESSAGE = 'Ошибка создания мероприятия.'.
              APPEND S_BAPIRET2 TO T_RETURN.
            ENDIF.
          ENDIF.

          " Обработка сообщений

          LOOP AT MESSTAB2 ASSIGNING <MESSTAB2>.
            CLEAR: S_BAPIRET2.

            S_BAPIRET2-TYPE = <MESSTAB>-MSGTYP.
            S_BAPIRET2-ID = <MESSTAB2>-MSGID.
            S_BAPIRET2-NUMBER = <MESSTAB2>-MSGNR.
            S_BAPIRET2-MESSAGE_V1 = <MESSTAB2>-MSGV1.
            S_BAPIRET2-MESSAGE_V2 = <MESSTAB2>-MSGV2.
            S_BAPIRET2-MESSAGE_V3 = <MESSTAB2>-MSGV3.
            S_BAPIRET2-MESSAGE_V4 = <MESSTAB2>-MSGV4.

            CALL FUNCTION 'RPY_MESSAGE_COMPOSE'
              EXPORTING
*               LANGUAGE          = SY-LANGU
                MESSAGE_ID        = S_BAPIRET2-ID
                MESSAGE_NUMBER    = S_BAPIRET2-NUMBER
                MESSAGE_VAR1      = S_BAPIRET2-MESSAGE_V1
                MESSAGE_VAR2      = S_BAPIRET2-MESSAGE_V2
                MESSAGE_VAR3      = S_BAPIRET2-MESSAGE_V3
                MESSAGE_VAR4      = S_BAPIRET2-MESSAGE_V4
              IMPORTING
                MESSAGE_TEXT      = MSG_TXT2
*         TABLES
*               LONGTEXT          =
              EXCEPTIONS
                MESSAGE_NOT_FOUND = 1
                OTHERS            = 2.
            IF SY-SUBRC <> 0.
*         MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
            ELSE.
              IF MSG_TXT2 IS NOT INITIAL.
                S_BAPIRET2-MESSAGE = MSG_TXT2.
              ENDIF.
            ENDIF.
            APPEND S_BAPIRET2 TO T_RETURN.
          ENDLOOP.

        ENDIF.
        BDCDAT[] = BDCDATA[].
*--------------------------------------------------------------------*
        " Еще одна проверка на то что бы по старой должности не осталось не ограниченных соединений,
* если будут, но надо стереть.
* Определяем штатку по текущему орг.присвоению       " Добавлено 20.05.2013 00018688
        SELECT * FROM HRP1001 INTO TABLE IT_PA1001
                          WHERE SOBID = NUMBER
                          AND   OTYPE = 'S'
                          AND   PLVAR = '01'
                          AND   RSIGN = 'A'
                          AND   RELAT = '008'
                          AND   SCLAS = 'P'
*                          AND   BEGDA < Z_BEGDA
                          AND   ENDDA = '99991231'.
        LOOP AT IT_PA1001 WHERE OBJID <> PLANS.

* Определяем есть ли по этой штатке ограниченная запись у сотрудника,
* если нет, то и не ограниченную удалять нельзя!
          SELECT * FROM HRP1001 INTO TABLE IT_PA1001
                            WHERE SOBID = NUMBER
                            AND   OTYPE = 'S'
                            AND   PLVAR = '01'
                            AND   RSIGN = 'A'
                            AND   RELAT = '008'
                            AND   SCLAS = 'P'
                            AND   OBJID = IT_PA1001-OBJID
                            AND   ENDDA < '99991231'.
          IF SY-SUBRC = 0 . " значит есть!
            DELETE FROM HRP1001 WHERE OTYPE = 'S' AND OBJID = IT_PA1001-OBJID AND SCLAS = 'P'
              AND PLVAR = '01' AND RSIGN = 'A' AND RELAT = '008' AND SOBID = NUMBER AND ENDDA = '99991231'.
            DELETE FROM HRP1001 WHERE OTYPE = 'P' AND OBJID = NUMBER AND SCLAS = 'S' AND PLVAR = '01'
              AND RSIGN = 'B' AND RELAT = '008' AND SOBID = IT_PA1001-OBJID AND ENDDA = '99991231'.
          ENDIF.
        ENDLOOP.
***************************************************
* Теперь определяем статус пакетника - сработал или нет
        SELECT * FROM HRP1001
                              WHERE OBJID = PLANS
                              AND   OTYPE = 'S'
                              AND   PLVAR = '01'
                              AND   RSIGN = 'A'
                              AND   RELAT = '008'
                              AND   SCLAS = 'P'
                              AND   SOBID = NUMBER
                              AND   ENDDA >= Z_BEGDA
                              AND   BEGDA <= Z_BEGDA.
        ENDSELECT.
        IF SY-SUBRC = 0.
          SELECT * FROM PA0302
                              WHERE PERNR = PERNR
                              AND   MASSN = MASSN
                              AND   MASSG = MASSG
                              AND   ENDDA = Z_BEGDA
                              AND   BEGDA = Z_BEGDA.
          ENDSELECT.
          IF SY-SUBRC = 0.
            DONE = 'X'.
          ENDIF.
        ENDIF.
        CLEAR INF_0001.
*      BDCDAT[] = BDCDATA[].

      ENDIF.

    ENDIF.

  ELSEIF MOD = '2'.
    "This code is requred and locks the record ready for modification
    CALL FUNCTION 'HR_EMPLOYEE_ENQUEUE'
      EXPORTING
        NUMBER = NUMBER.
*
    CALL FUNCTION 'HR_INFOTYPE_GETDETAIL'
      EXPORTING
        INFTY         = '2001'
        NUMBER        = NUMBER
        SUBTYPE       = SUBTY
        VALIDITYBEGIN = BEGINDATE
        VALIDITYEND   = ENDDATE
        TCLAS         = 'A'
      IMPORTING
        RETURN        = LS_RETURN
        RECORD        = LS_P2001
      EXCEPTIONS
        OTHERS        = 0.
    IF NOT LS_RETURN IS INITIAL.
      EXIT.
    ENDIF.

*- prepare after image -------------------------------------------------
*    LS_P2001-PERNR = PERNR.
*    LS_P2001-INFTY = '2001'.
*    LS_P2001-ENDDA = ENDDA.
*    LS_P2001-BEGDA = BEGDA.
    LS_P2001-SPPE1 = DATE.

    CALL FUNCTION 'HR_INFOTYPE_OPERATION'
      EXPORTING
        INFTY         = '2001'
        NUMBER        = NUMBER
        SUBTYPE       = SUBTY
        VALIDITYEND   = ENDDATE
        VALIDITYBEGIN = BEGINDATE
        RECORD        = LS_P2001
        OPERATION     = 'MOD'
*       tclas         = 'A'
      IMPORTING
        RETURN        = LS_RETURN
      EXCEPTIONS
        OTHERS        = 0.
    IF LS_RETURN-TYPE IS NOT INITIAL.
      CALL FUNCTION 'HR_BEN_HANDLE_ERROR'
        EXPORTING
          PERNR       = NUMBER
          MSG_CLASS   = LS_RETURN-ID
          MSG_NUMBER  = LS_RETURN-NUMBER
          MSG_PAR1    = LS_RETURN-MESSAGE_V1
          MSG_PAR2    = LS_RETURN-MESSAGE_V2
          MSG_PAR3    = LS_RETURN-MESSAGE_V3
          MSG_PAR4    = LS_RETURN-MESSAGE_V4
          SEVERITY    = 8
          REACTION    = NO_MSG
        TABLES
          ERROR_TABLE = LT_ERRORS.
    ENDIF.
    "unlock record after modification
    CALL FUNCTION 'HR_EMPLOYEE_DEQUEUE'
      EXPORTING
        NUMBER = NUMBER.
  ENDIF.



ENDFUNCTION.
